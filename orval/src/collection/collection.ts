/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Indexer API
 * The Querys for the NFT Indexer
 * OpenAPI spec version: 1.0
 */
import * as axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

import type {
  Collection,
  CollectionResponseDto,
  FindCollectionByTypeDto,
  FindManyCollectionsDto
} from '.././model';




  export const Collection_findAll = <TData = AxiosResponse<Collection[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:3333/collection`,options
    );
  }
export const Collection_Search = <TData = AxiosResponse<Collection>>(
    name: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:3333/collection/search/${name}`,options
    );
  }
export const Collection_Stats = <TData = AxiosResponse<CollectionResponseDto>>(
    findCollectionByTypeDto: FindCollectionByTypeDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `http://localhost:3333/collection/type`,
      findCollectionByTypeDto,options
    );
  }
export const Collection_findByCondition = <TData = AxiosResponse<void>>(
    findManyCollectionsDto: FindManyCollectionsDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `http://localhost:3333/collection/condition`,
      findManyCollectionsDto,options
    );
  }
export type CollectionFindAllResult = AxiosResponse<Collection[]>
export type CollectionSearchResult = AxiosResponse<Collection>
export type CollectionStatsResult = AxiosResponse<CollectionResponseDto>
export type CollectionFindByConditionResult = AxiosResponse<void>
